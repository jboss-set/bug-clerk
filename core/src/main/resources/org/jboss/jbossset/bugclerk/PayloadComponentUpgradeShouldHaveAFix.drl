/*
 * JBoss, Home of Professional Open Source.
 * Copyright 2015, Red Hat, Inc., and individual contributors
 * as indicated by the @author tags. See the copyright.txt file in the
 * distribution for a full listing of individual contributors.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */

package org.jboss.jbossset.bugclerk;

import org.jboss.set.aphrodite.domain.Issue;
import org.jboss.set.aphrodite.domain.Comment;

import org.jboss.set.aphrodite.domain.Violation;
import org.jboss.set.aphrodite.domain.Severity;

import org.jboss.jbossset.bugclerk.checks.PayloadHelpers;

import org.jboss.set.aphrodite.domain.IssueType;

global java.util.Map issuesIndexedByURL;
global java.util.Map payloadTrackerIndexedByURL;
global org.jboss.jbossset.bugclerk.aphrodite.AphroditeClient aphrodite;

rule "PayloadComponentUpgradeShouldHaveAFix"
  salience 0
  dialect "mvel"
  when
    // Is this a component upgrade ?
    $candidate : Candidate( $issue: bug, $url: bug.getURL, bug.getType().toString().equalsIgnoreCase(IssueType.UPGRADE.toString()), ! filtered);
    // Does this component upgrade blocks a payload ?
    eval ( PayloadHelpers.isOneOfThoseIssueAPayload($issue.getBlocks(), payloadTrackerIndexedByURL, aphrodite) == true );
    // Does it has a dependency to a fix that belong to the payload tracker ?
    eval ( PayloadHelpers.doesAnIssueBelongToPayloadTracker( $issue.getDependsOn() , issuesIndexedByURL, payloadTrackerIndexedByURL) == false );
  then
    $candidate.addViolationOnce(new Violation(drools.getRule().getName(), "The following issue belong to one or payload tracker, but has no component fix:" + $issue.getTrackerId().get() ));
end
